---
kind: pipeline
name: openbas-tests

steps:
  - name: Runner information
    image: alpine:3.22
    commands:
    - echo DRONE_STAGE_MACHINE ${DRONE_STAGE_MACHINE}

  - name: api-tests
    image: maven:3.9.9-eclipse-temurin-22
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://pgsql:5432/openbas
      MINIO_ENDPOINT: minio
      MINIO_PORT: 9000
      ENGINE_URL: http://elastic:9200
    commands:
      - sleep 60
      - mvn clean install -q -DskipTests
      - mvn spotless:check
      - cd openbas-api
      - mvn test
      - cd ../openbas-framework
      - mvn test

  - name: frontend-tests
    image: node:22.17.1-alpine
    commands:
      - cd openbas-front
      - yarn install
      - yarn build
      - yarn check-ts
      - yarn lint
      - yarn i18n-checker
      - NODE_OPTIONS=--max_old_space_size=8192 yarn test

  - name: app-e2e
    image: maven:3.9.9-eclipse-temurin-22
    detach: true
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://pgsql-e2e:5432/openbas
      SPRING_DATASOURCE_USERNAME: openbas
      SPRING_DATASOURCE_PASSWORD: openbas
      MINIO_ENDPOINT: minio-e2e
      MINIO_PORT: 9000
      ENGINE_URL: http://elastic:9200
      MINIO_ACCESS_KEY: minioadmin
      MINIO_ACCESS_SECRET: minioadmin
      OPENBAS_ADMIN_EMAIL: admin@openbas.io
      OPENBAS_ADMIN_PASSWORD: admin
      OPENBAS_ADMIN_TOKEN: 0d17ce9a-f3a8-4c6d-9721-c98dc3dc023f
      SPRING_PROFILES_ACTIVE: ci
    commands:
      - apt update && apt install -y gnupg
      - curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -
      - echo "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list
      - curl -fsSL https://deb.nodesource.com/setup_22.x | bash -
      - apt update
      - apt install -y yarn
      - apt install -y nodejs
      - apt install -y git
      - cd openbas-front
      - yarn install
      - yarn build
      - cd ..
      - mvn install -DskipTests=true
      - java -jar openbas-api/target/openbas-api.jar
    depends_on:
      - api-tests
      - frontend-tests

  - name: frontend-e2e-tests
    image: node:22.17.1
    commands:
      - apt update
      - apt -y install netcat-traditional
      - while ! nc -z app-e2e 8080 ; do sleep 1 ; done
      - cd openbas-front
      - yarn install
      - yarn playwright install --with-deps chromium
      - APP_URL=http://app-e2e:8080 yarn test:e2e
    depends_on:
      - app-e2e

  - name: frontend-api-types
    image: node:22.17.1
    volumes:
      - name: cache-node-frontend-api-types
        path: /drone/src/openbas-front/node_modules
    commands:
      - apt update
      - apt -y install netcat-traditional
      - while ! nc -z app-e2e 8080 ; do sleep 1 ; done
      - cd openbas-front
      - yarn install
      - API_URL=http://app-e2e:8080 yarn generate-types-from-api
      - |
        if git diff --name-only | grep -q './src/utils/api-types.d.ts'; then
          echo "⚠️ Forgot to generate types! Please run 'yarn run generate-types-from-api' before committing."; exit 1;
        fi
    depends_on:
      - app-e2e

  - name: codecov
    image: robertstettner/drone-codecov
    settings:
      token:
        from_secret: codecov_token
      files:
        - openbas-api/target/site/jacoco/jacoco.xml
        - openbas-framework/target/site/jacoco/jacoco.xml
    depends_on:
      - api-tests

  - name: build-circleci
    image: curlimages/curl
    commands:
      - curl -X POST --data "branch=$DRONE_COMMIT_BRANCH" https://circleci.com/api/v1.1/project/github/OpenBAS-Platform/openbas/build?circle-token=$CIRCLECI_TOKEN
    environment:
      CIRCLECI_TOKEN:
        from_secret: circleci_token
    when:
      branch:
        - master
        - release/*
      event:
        exclude:
          - pull_request
          - tag
    depends_on:
      - api-tests
      - frontend-tests
      - frontend-e2e-tests

  - name: build-circleci-release
    image: curlimages/curl
    commands:
      - curl -X POST --data "tag=$DRONE_TAG" https://circleci.com/api/v1.1/project/github/OpenBAS-Platform/openbas/build?circle-token=$CIRCLECI_TOKEN
    environment:
      CIRCLECI_TOKEN:
        from_secret: circleci_token
    when:
      event:
        - tag
    depends_on:
      - api-tests
      - frontend-tests
      - frontend-e2e-tests

  - name: slack
    image: plugins/slack
    settings:
      webhook:
        from_secret: slack_webhook
      username: drone
      channel: notifications
    when:
      status: [ success, failure ]
    depends_on:
      - api-tests
      - frontend-tests
      - frontend-e2e-tests

services:
  - name: minio
    image: minio/minio:RELEASE.2023-12-02T10-51-33Z-cpuv1
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: [ server, /data ]
  - name: pgsql
    image: postgres:17-alpine
    environment:
      POSTGRES_USER: openbas
      POSTGRES_PASSWORD: openbas
      POSTGRES_DB: openbas
  - name: minio-e2e
    image: minio/minio:RELEASE.2023-12-02T10-51-33Z-cpuv1
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: [ server, /data ]
  - name: pgsql-e2e
    image: postgres:17-alpine
    environment:
      POSTGRES_USER: openbas
      POSTGRES_PASSWORD: openbas
      POSTGRES_DB: openbas
  - name: elastic
    image: docker.elastic.co/elasticsearch/elasticsearch:9.0.4
    environment:
      discovery.type: single-node
      xpack.security.enabled: false
      ES_JAVA_OPTS: -Xms4g -Xmx4g
